import itertools
import numpy as np
from .feature import COMMON_ABSTRACT_NAMES_WITH_ABSTRACT_TYPES, ABSTRACT_EXCITE
import math

# potential
SRP = soma_rest_potential = -65
NRP = nerve_rest_potential = -65
ATP = active_threshold_potential = 0

PIXEL_MAX_EXCITE = 255 * -SRP

# Learning Rate: Hopes to prove the stability of this link by only allowing its strength to reach the target value after being repeated 1/LEARNING_RATE times.
LEARNING_RATE = .3
WEAKEN_AXON_END_LTP_PER_TICK = 50.
DIED_LTP_THRESHOLD = 1.
POST_SYNAPSE_RESOURCE_SUM = 400.
STANDARD_LINK_LENGTH = 8
POSTERIOR_SYNAPSE_TRANSMITTER_SUM = 2.
STANDARD_PREDICT_EXCITE = math.pow(POSTERIOR_SYNAPSE_TRANSMITTER_SUM,
                                   STANDARD_LINK_LENGTH)
ABSTRACT_SYNAPSE_RP = -.1
ABSTRACT_TRANSMITTER_RELEASE_SUM = POSTERIOR_SYNAPSE_TRANSMITTER_SUM / POST_SYNAPSE_RESOURCE_SUM / (
    ABSTRACT_EXCITE // -ABSTRACT_SYNAPSE_RP)
JOIN_COMPETITION_THRESHOLD = 100

PRE_LTP_SUM_BASE = 10
COGNITION_EXCITE = 650

SPINE_SUM_ON_A_DENDRITE = 150
SPINE_SIZE_SUM_LIMIT = 5000
